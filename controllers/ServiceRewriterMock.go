// Code generated by mockery v2.14.0. DO NOT EDIT.

package controllers

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// ServiceRewriter is an autogenerated mock type for the ServiceRewriter type
type ServiceRewriter struct {
	mock.Mock
}

// Rewrite provides a mock function with given fields: ctx, serviceList, activateMaintenanceMode
func (_m *ServiceRewriter) rewrite(ctx context.Context, serviceList v1ServiceList, activateMaintenanceMode bool) error {
	ret := _m.Called(ctx, serviceList, activateMaintenanceMode)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, v1ServiceList, bool) error); ok {
		r0 = rf(ctx, serviceList, activateMaintenanceMode)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewServiceRewriter interface {
	mock.TestingT
	Cleanup(func())
}

// NewServiceRewriter creates a new instance of ServiceRewriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewServiceRewriter(t mockConstructorTestingTNewServiceRewriter) *ServiceRewriter {
	mock := &ServiceRewriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

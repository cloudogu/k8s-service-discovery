// Code generated by mockery v2.42.1. DO NOT EDIT.

package controllers

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// mockServiceRewriter is an autogenerated mock type for the serviceRewriter type
type mockServiceRewriter struct {
	mock.Mock
}

type mockServiceRewriter_Expecter struct {
	mock *mock.Mock
}

func (_m *mockServiceRewriter) EXPECT() *mockServiceRewriter_Expecter {
	return &mockServiceRewriter_Expecter{mock: &_m.Mock}
}

// rewrite provides a mock function with given fields: ctx, serviceList, activateMaintenanceMode
func (_m *mockServiceRewriter) rewrite(ctx context.Context, serviceList v1ServiceList, activateMaintenanceMode bool) error {
	ret := _m.Called(ctx, serviceList, activateMaintenanceMode)

	if len(ret) == 0 {
		panic("no return value specified for rewrite")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, v1ServiceList, bool) error); ok {
		r0 = rf(ctx, serviceList, activateMaintenanceMode)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockServiceRewriter_rewrite_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'rewrite'
type mockServiceRewriter_rewrite_Call struct {
	*mock.Call
}

// rewrite is a helper method to define mock.On call
//   - ctx context.Context
//   - serviceList v1ServiceList
//   - activateMaintenanceMode bool
func (_e *mockServiceRewriter_Expecter) rewrite(ctx interface{}, serviceList interface{}, activateMaintenanceMode interface{}) *mockServiceRewriter_rewrite_Call {
	return &mockServiceRewriter_rewrite_Call{Call: _e.mock.On("rewrite", ctx, serviceList, activateMaintenanceMode)}
}

func (_c *mockServiceRewriter_rewrite_Call) Run(run func(ctx context.Context, serviceList v1ServiceList, activateMaintenanceMode bool)) *mockServiceRewriter_rewrite_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(v1ServiceList), args[2].(bool))
	})
	return _c
}

func (_c *mockServiceRewriter_rewrite_Call) Return(_a0 error) *mockServiceRewriter_rewrite_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockServiceRewriter_rewrite_Call) RunAndReturn(run func(context.Context, v1ServiceList, bool) error) *mockServiceRewriter_rewrite_Call {
	_c.Call.Return(run)
	return _c
}

// newMockServiceRewriter creates a new instance of mockServiceRewriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockServiceRewriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockServiceRewriter {
	mock := &mockServiceRewriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

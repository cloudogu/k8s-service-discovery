// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	v1 "k8s.io/api/core/v1"
)

// IngressUpdater is an autogenerated mock type for the IngressUpdater type
type IngressUpdater struct {
	mock.Mock
}

// UpdateIngressOfService provides a mock function with given fields: ctx, service, isMaintenanceMode
func (_m *IngressUpdater) UpsertIngressForService(ctx context.Context, service *v1.Service, isMaintenanceMode bool) error {
	ret := _m.Called(ctx, service, isMaintenanceMode)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *v1.Service, bool) error); ok {
		r0 = rf(ctx, service, isMaintenanceMode)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIngressUpdater interface {
	mock.TestingT
	Cleanup(func())
}

// NewIngressUpdater creates a new instance of IngressUpdater. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIngressUpdater(t mockConstructorTestingTNewIngressUpdater) *IngressUpdater {
	mock := &IngressUpdater{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

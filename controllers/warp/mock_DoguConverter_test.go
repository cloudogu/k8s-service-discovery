// Code generated by mockery v2.20.0. DO NOT EDIT.

package warp

import (
	types "github.com/cloudogu/k8s-service-discovery/controllers/warp/types"
	mock "github.com/stretchr/testify/mock"
)

// MockDoguConverter is an autogenerated mock type for the DoguConverter type
type MockDoguConverter struct {
	mock.Mock
}

type MockDoguConverter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDoguConverter) EXPECT() *MockDoguConverter_Expecter {
	return &MockDoguConverter_Expecter{mock: &_m.Mock}
}

// ReadAndUnmarshalDogu provides a mock function with given fields: registry, key, tag
func (_m *MockDoguConverter) ReadAndUnmarshalDogu(registry types.WatchConfigurationContext, key string, tag string) (types.EntryWithCategory, error) {
	ret := _m.Called(registry, key, tag)

	var r0 types.EntryWithCategory
	var r1 error
	if rf, ok := ret.Get(0).(func(types.WatchConfigurationContext, string, string) (types.EntryWithCategory, error)); ok {
		return rf(registry, key, tag)
	}
	if rf, ok := ret.Get(0).(func(types.WatchConfigurationContext, string, string) types.EntryWithCategory); ok {
		r0 = rf(registry, key, tag)
	} else {
		r0 = ret.Get(0).(types.EntryWithCategory)
	}

	if rf, ok := ret.Get(1).(func(types.WatchConfigurationContext, string, string) error); ok {
		r1 = rf(registry, key, tag)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockDoguConverter_ReadAndUnmarshalDogu_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReadAndUnmarshalDogu'
type MockDoguConverter_ReadAndUnmarshalDogu_Call struct {
	*mock.Call
}

// ReadAndUnmarshalDogu is a helper method to define mock.On call
//   - registry types.WatchConfigurationContext
//   - key string
//   - tag string
func (_e *MockDoguConverter_Expecter) ReadAndUnmarshalDogu(registry interface{}, key interface{}, tag interface{}) *MockDoguConverter_ReadAndUnmarshalDogu_Call {
	return &MockDoguConverter_ReadAndUnmarshalDogu_Call{Call: _e.mock.On("ReadAndUnmarshalDogu", registry, key, tag)}
}

func (_c *MockDoguConverter_ReadAndUnmarshalDogu_Call) Run(run func(registry types.WatchConfigurationContext, key string, tag string)) *MockDoguConverter_ReadAndUnmarshalDogu_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(types.WatchConfigurationContext), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *MockDoguConverter_ReadAndUnmarshalDogu_Call) Return(_a0 types.EntryWithCategory, _a1 error) *MockDoguConverter_ReadAndUnmarshalDogu_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockDoguConverter_ReadAndUnmarshalDogu_Call) RunAndReturn(run func(types.WatchConfigurationContext, string, string) (types.EntryWithCategory, error)) *MockDoguConverter_ReadAndUnmarshalDogu_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockDoguConverter interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockDoguConverter creates a new instance of MockDoguConverter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockDoguConverter(t mockConstructorTestingTNewMockDoguConverter) *MockDoguConverter {
	mock := &MockDoguConverter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

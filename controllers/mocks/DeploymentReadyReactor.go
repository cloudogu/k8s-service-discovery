// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import (
	context "context"

	dogustart "github.com/cloudogu/k8s-service-discovery/controllers/dogustart"

	mock "github.com/stretchr/testify/mock"
)

// DeploymentReadyReactor is an autogenerated mock type for the DeploymentReadyReactor type
type DeploymentReadyReactor struct {
	mock.Mock
}

// WaitForReady provides a mock function with given fields: ctx, deploymentName, waitOptions, onReady
func (_m *DeploymentReadyReactor) WaitForReady(ctx context.Context, deploymentName string, waitOptions dogustart.WaitOptions, onReady func(context.Context)) error {
	ret := _m.Called(ctx, deploymentName, waitOptions, onReady)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, dogustart.WaitOptions, func(context.Context)) error); ok {
		r0 = rf(ctx, deploymentName, waitOptions, onReady)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewDeploymentReadyReactor interface {
	mock.TestingT
	Cleanup(func())
}

// NewDeploymentReadyReactor creates a new instance of DeploymentReadyReactor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDeploymentReadyReactor(t mockConstructorTestingTNewDeploymentReadyReactor) *DeploymentReadyReactor {
	mock := &DeploymentReadyReactor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

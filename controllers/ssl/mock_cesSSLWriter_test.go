// Code generated by mockery v2.44.1. DO NOT EDIT.

package ssl

import mock "github.com/stretchr/testify/mock"

// mockCesSSLWriter is an autogenerated mock type for the cesSSLWriter type
type mockCesSSLWriter struct {
	mock.Mock
}

type mockCesSSLWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *mockCesSSLWriter) EXPECT() *mockCesSSLWriter_Expecter {
	return &mockCesSSLWriter_Expecter{mock: &_m.Mock}
}

// WriteCertificate provides a mock function with given fields: certType, cert, key
func (_m *mockCesSSLWriter) WriteCertificate(certType string, cert string, key string) error {
	ret := _m.Called(certType, cert, key)

	if len(ret) == 0 {
		panic("no return value specified for WriteCertificate")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string) error); ok {
		r0 = rf(certType, cert, key)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockCesSSLWriter_WriteCertificate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteCertificate'
type mockCesSSLWriter_WriteCertificate_Call struct {
	*mock.Call
}

// WriteCertificate is a helper method to define mock.On call
//   - certType string
//   - cert string
//   - key string
func (_e *mockCesSSLWriter_Expecter) WriteCertificate(certType interface{}, cert interface{}, key interface{}) *mockCesSSLWriter_WriteCertificate_Call {
	return &mockCesSSLWriter_WriteCertificate_Call{Call: _e.mock.On("WriteCertificate", certType, cert, key)}
}

func (_c *mockCesSSLWriter_WriteCertificate_Call) Run(run func(certType string, cert string, key string)) *mockCesSSLWriter_WriteCertificate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *mockCesSSLWriter_WriteCertificate_Call) Return(_a0 error) *mockCesSSLWriter_WriteCertificate_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockCesSSLWriter_WriteCertificate_Call) RunAndReturn(run func(string, string, string) error) *mockCesSSLWriter_WriteCertificate_Call {
	_c.Call.Return(run)
	return _c
}

// newMockCesSSLWriter creates a new instance of mockCesSSLWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockCesSSLWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockCesSSLWriter {
	mock := &mockCesSSLWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

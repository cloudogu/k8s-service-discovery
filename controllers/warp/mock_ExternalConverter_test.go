// Code generated by mockery v2.20.0. DO NOT EDIT.

package warp

import (
	types "github.com/cloudogu/k8s-service-discovery/controllers/warp/types"
	mock "github.com/stretchr/testify/mock"
)

// MockExternalConverter is an autogenerated mock type for the ExternalConverter type
type MockExternalConverter struct {
	mock.Mock
}

type MockExternalConverter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockExternalConverter) EXPECT() *MockExternalConverter_Expecter {
	return &MockExternalConverter_Expecter{mock: &_m.Mock}
}

// ReadAndUnmarshalExternal provides a mock function with given fields: registry, key
func (_m *MockExternalConverter) ReadAndUnmarshalExternal(registry types.WatchConfigurationContext, key string) (types.EntryWithCategory, error) {
	ret := _m.Called(registry, key)

	var r0 types.EntryWithCategory
	var r1 error
	if rf, ok := ret.Get(0).(func(types.WatchConfigurationContext, string) (types.EntryWithCategory, error)); ok {
		return rf(registry, key)
	}
	if rf, ok := ret.Get(0).(func(types.WatchConfigurationContext, string) types.EntryWithCategory); ok {
		r0 = rf(registry, key)
	} else {
		r0 = ret.Get(0).(types.EntryWithCategory)
	}

	if rf, ok := ret.Get(1).(func(types.WatchConfigurationContext, string) error); ok {
		r1 = rf(registry, key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockExternalConverter_ReadAndUnmarshalExternal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReadAndUnmarshalExternal'
type MockExternalConverter_ReadAndUnmarshalExternal_Call struct {
	*mock.Call
}

// ReadAndUnmarshalExternal is a helper method to define mock.On call
//   - registry types.WatchConfigurationContext
//   - key string
func (_e *MockExternalConverter_Expecter) ReadAndUnmarshalExternal(registry interface{}, key interface{}) *MockExternalConverter_ReadAndUnmarshalExternal_Call {
	return &MockExternalConverter_ReadAndUnmarshalExternal_Call{Call: _e.mock.On("ReadAndUnmarshalExternal", registry, key)}
}

func (_c *MockExternalConverter_ReadAndUnmarshalExternal_Call) Run(run func(registry types.WatchConfigurationContext, key string)) *MockExternalConverter_ReadAndUnmarshalExternal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(types.WatchConfigurationContext), args[1].(string))
	})
	return _c
}

func (_c *MockExternalConverter_ReadAndUnmarshalExternal_Call) Return(_a0 types.EntryWithCategory, _a1 error) *MockExternalConverter_ReadAndUnmarshalExternal_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockExternalConverter_ReadAndUnmarshalExternal_Call) RunAndReturn(run func(types.WatchConfigurationContext, string) (types.EntryWithCategory, error)) *MockExternalConverter_ReadAndUnmarshalExternal_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockExternalConverter interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockExternalConverter creates a new instance of MockExternalConverter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockExternalConverter(t mockConstructorTestingTNewMockExternalConverter) *MockExternalConverter {
	mock := &MockExternalConverter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
